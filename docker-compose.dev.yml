version: "3.9"
services:
  db:
    image: postgis/postgis:13-master
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres

  pg_tileserv:
    image: pramsey/pg_tileserv:latest
    env_file:
      - .env.local
    environment:
      - DATABASE_URL=postgresql://${R_USER:-postgres}:${R_USER_PW:-postgres}@db/${DB_MAIN_NAME:-tarmo}
    ports:
      - "7800:7800"
    depends_on:
      - db
    restart: unless-stopped

  lipas_loader:
    build:
      context: backend
      dockerfile: lipas.Dockerfile
    env_file:
      - .env.local
    environment:
      - DB_INSTANCE_ADDRESS=db
      - DB_INSTANCE_PORT=5432
    ports:
      - "8080:8080"
    depends_on:
      - db
    volumes:
      - ./backend/lambda_functions/lipas_loader/lipas_loader.py:/var/task/app.py

  osm_loader:
    build:
      context: backend
      dockerfile: osm.Dockerfile
    env_file:
      - .env.local
    environment:
      - DB_INSTANCE_ADDRESS=db
      - DB_INSTANCE_PORT=5432
    ports:
      - "8082:8080"
    depends_on:
      - db
    volumes:
      - ./backend/lambda_functions/osm_loader/osm_loader.py:/var/task/app.py

  wfs_loader:
    build:
      context: backend
      dockerfile: wfs.Dockerfile
    env_file:
      - .env.local
    environment:
      - DB_INSTANCE_ADDRESS=db
      - DB_INSTANCE_PORT=5432
    ports:
      - "8083:8080"
    depends_on:
      - db
    volumes:
      - ./backend/lambda_functions/wfs_loader/wfs_loader.py:/var/task/app.py

  arcgis_loader:
    build:
      context: backend
      dockerfile: arcgis.Dockerfile
    env_file:
      - .env.local
    environment:
      - DB_INSTANCE_ADDRESS=db
      - DB_INSTANCE_PORT=5432
    ports:
      - "8085:8080"
    depends_on:
      - db
    volumes:
      - ./backend/lambda_functions/arcgis_loader/arcgis_loader.py:/var/task/app.py

  db_manager:
    build:
      context: backend
      dockerfile: db_manager.Dockerfile
    env_file:
      - .env.local
    environment:
      - DB_INSTANCE_ADDRESS=db
      - DB_INSTANCE_PORT=5432
    ports:
      - "8081:8080"
    depends_on:
      - db
    volumes:
      - ./backend/lambda_functions/db_manager/db_manager.py:/var/task/app.py

  notifier:
    build:
      context: backend
      dockerfile: notifier.Dockerfile
    volumes:
      - ./backend/lambda_functions/notifier/notifier.py:/var/task/app.py
